// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: resource_library.capnp

#include "resource_library.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<63> b_e28ce4e86855ff08 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      8, 255,  85, 104, 232, 228, 140, 226,
     23,   0,   0,   0,   1,   0,   1,   0,
    204, 189, 255,  11, 112,  18, 176, 216,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 111, 117, 114,  99, 101,
     95, 108, 105,  98, 114,  97, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  82,
    101, 115, 111, 117, 114,  99, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e28ce4e86855ff08 = b_e28ce4e86855ff08.words;
#if !CAPNP_LITE
static const uint16_t m_e28ce4e86855ff08[] = {0, 1, 2};
static const uint16_t i_e28ce4e86855ff08[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e28ce4e86855ff08 = {
  0xe28ce4e86855ff08, b_e28ce4e86855ff08.words, 63, nullptr, m_e28ce4e86855ff08,
  0, 3, i_e28ce4e86855ff08, nullptr, nullptr, { &s_e28ce4e86855ff08, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_c60a4233a9c23167 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103,  49, 194, 169,  51,  66,  10, 198,
     23,   0,   0,   0,   1,   0,   0,   0,
    204, 189, 255,  11, 112,  18, 176, 216,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 111, 117, 114,  99, 101,
     95, 108, 105,  98, 114,  97, 114, 121,
     46,  99,  97, 112, 110, 112,  58,  82,
    101, 115, 111, 117, 114,  99, 101,  76,
    105,  98, 114,  97, 114, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 111, 117, 114,  99, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      8, 255,  85, 104, 232, 228, 140, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c60a4233a9c23167 = b_c60a4233a9c23167.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c60a4233a9c23167[] = {
  &s_e28ce4e86855ff08,
};
static const uint16_t m_c60a4233a9c23167[] = {0};
static const uint16_t i_c60a4233a9c23167[] = {0};
const ::capnp::_::RawSchema s_c60a4233a9c23167 = {
  0xc60a4233a9c23167, b_c60a4233a9c23167.words, 39, d_c60a4233a9c23167, m_c60a4233a9c23167,
  1, 1, i_c60a4233a9c23167, nullptr, nullptr, { &s_c60a4233a9c23167, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace meta {

// Resource
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Resource::_capnpPrivate::dataWordSize;
constexpr uint16_t Resource::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Resource::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Resource::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ResourceLibrary
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ResourceLibrary::_capnpPrivate::dataWordSize;
constexpr uint16_t ResourceLibrary::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ResourceLibrary::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResourceLibrary::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

